"""Require display_name to be unique on User and add deleted_reason to UserClanLink

Revision ID: 3ace8bc6b24a
Revises: cf975c110d95
Create Date: 2022-09-04 16:56:10.942643+00:00

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlmodel import Session


# revision identifiers, used by Alembic.
revision = "3ace8bc6b24a"
down_revision = "cf975c110d95"
branch_labels = None
depends_on = None


def upgrade() -> None:
    with Session(op.get_context().connection) as session:
        session.exec("DELETE FROM user WHERE verified_email IS NULL;")
        session.exec(
            "DELETE FROM user WHERE rowid NOT IN (SELECT MIN(rowid) FROM user GROUP BY display_name ORDER BY rowid);"
        )

    if op.get_context().dialect.name == "sqlite":
        with op.batch_alter_table("user") as batch_op:
            batch_op.create_unique_constraint(
                "user.display_name.unique", ["display_name"]
            )
    else:
        op.create_unique_constraint(None, "user", ["display_name"])
    op.add_column(
        "userclanlink",
        sa.Column("deleted_reason", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("userclanlink", "deleted_reason")
    op.drop_constraint(None, "user", type_="unique")
    # ### end Alembic commands ###
